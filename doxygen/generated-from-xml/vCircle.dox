
  /**
  *
  * @ingroup processing 
  * \defgroup vCircle vCircle
  * Event-driven Circle Detection using the Hough Transform
  * Version:1.0
  * \author  Arren Glover arren.glover@iit.it
  * \n
  * \copyright Released under the terms of the GNU GPL v2.0
  * \section intro_sec Description
  *
  
      The module detects circles in address events and/or flow events using a circular Hough transform.
    
  * \section parameters_sec Parameters     
  
  *- -- name : Specifies the stem name of ports created by the module.
  *- -- strict : Sets both input and ouput ports to use strict protocols.
  *- -- everyevent : Processes events one at a time rather than batching all events in a bottle.
  *- -- parallel : Use multiple threads (equal to the amount of circle sizes to detect).
  *- -- width : Number of pixels on the x-axis of the sensor.
  *- -- height : Number of pixels on the y-axis of the sensor.
  *- -- inlierThreshold : Threshold strength for a confirmed circle detection.
  *- -- qType : Type of event-queue or FIFO used in processing. Options are fixed, time, life, edge
  *- -- fifo : The length in events or milliseconds of the qType used.
  *- -- arc : The arc length of the directed transform in degrees. Setting it to 0 uses a full transform.
  *- -- radmin : Minimum circle size to detect.
  *- -- radmax : Maximum circle size to detect.
  * \section inputports_sec Input Ports
  * 
  *- /vCircle/vBottle:i [eventdriven::vBottle]  [default carrier:tcp]: 
                Accepts the address events and/or flow events in the vBottle
                container
            
  *
  
  * \section outputports_sec Output Ports
  * 
  *- /vCircle/vBottle:o [eventdriven::vBottle]  [default carrier:tcp]: 
                Outputs the cirlce detections in the form of an
                eventdriven::ClusterEventGauss. The vBottle also contains all
                events in the vBottle received as input.
            
  *
  
  *- /vCircle/scope:o [yarp::os::Bottle]  [default carrier:udp]: 
                Outputs debug information for use with yarpscope. The gap
                between input bottle numbers is written to detect data being
                lost.
            
  *
  
  *- /vCirlce/debug:o [yarp::sig::Image]  [default carrier:udp]: 
                Outputs a debugging images displaying events in the event-queue
                as well as the strength of the Hough transform from the same
                events.
            
  *
  
  *- /vCircle/dump:o [yarp::os::Bottle]  [default carrier:tcp]: 
                Outputs a dump of detections for experiment analysis. The format
                 is "Time Offset | Event Timestamp | X | Y | R | Score".
            
  *
  
  *
  * \section services_sec Services
  * 
  *
  * 
  *
  *
  **/

